{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/http/http.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UploadDocsComponent_div_30_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please wait while the file is being uploaded\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadDocsComponent_div_30_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"File Uploaded\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadDocsComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17)(2, \"div\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 19);\n    i0.ɵɵtemplate(5, UploadDocsComponent_div_30_span_5_Template, 2, 0, \"span\", 16);\n    i0.ɵɵtemplate(6, UploadDocsComponent_div_30_span_6_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r3.progressValue, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.progressValue, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.progressValue !== 100);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.progressValue === 100);\n  }\n}\nexport class UploadDocsComponent {\n  constructor(http) {\n    this.http = http;\n    this.heading = 'Upload Documents';\n    this.progressValue = 0;\n    this.case_id = '';\n  }\n  onUploadDoc(data) {\n    let fd = new FormData();\n    fd.append('case_id', this.case_id);\n    fd.append('document', this.file);\n    fd.append('display_name', data.value.display_name);\n    fd.append('document_type', data.value.doc_type);\n    this.http.uploadDocs(fd).pipe(map(events => {\n      switch (events.type) {\n        case HttpEventType.UploadProgress:\n          this.progressValue = Math.round(events.loaded / events.total * 100);\n          break;\n        case HttpEventType.Response:\n          setTimeout(() => {\n            this.progressValue = 0;\n          }, 250);\n      }\n    })).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n    }\n    console.log(this.file);\n  }\n  static #_ = this.ɵfac = function UploadDocsComponent_Factory(t) {\n    return new (t || UploadDocsComponent)(i0.ɵɵdirectiveInject(i1.HttpService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadDocsComponent,\n    selectors: [[\"app-upload-docs\"]],\n    inputs: {\n      case_id: \"case_id\"\n    },\n    decls: 31,\n    vars: 2,\n    consts: [[1, \"px-5\", \"mt-4\"], [1, \"title\"], [1, \"form\", \"mt-4\"], [3, \"ngSubmit\"], [\"upload\", \"ngForm\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"form-label\"], [\"name\", \"doc_type\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-select\"], [\"doc_type\", \"ngModel\"], [1, \"col-md-4\"], [\"type\", \"text\", \"name\", \"display_name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"display_name\", \"ngModel\"], [\"type\", \"file\", 1, \"form-control\", 3, \"input\"], [1, \"col-md-2\"], [1, \"btn\", \"btn-primary\", 2, \"margin-top\", \"31px\"], [4, \"ngIf\"], [1, \"progress\", \"mt-4\"], [\"role\", \"progressbar\", \"aria-label\", \"Basic example\", \"aria-valuenow\", \"0\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\"], [1, \"mt-2\"]],\n    template: function UploadDocsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UploadDocsComponent_Template_form_ngSubmit_6_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r0 = i0.ɵɵreference(7);\n          return i0.ɵɵresetView(ctx.onUploadDoc(_r0));\n        });\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Document Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 8, 9)(14, \"option\");\n        i0.ɵɵtext(15, \"Affidavit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\");\n        i0.ɵɵtext(17, \"IA\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 10)(19, \"label\", 7);\n        i0.ɵɵtext(20, \"Display Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11, 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"label\", 7);\n        i0.ɵɵtext(25, \"Upload File\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"input\", 13);\n        i0.ɵɵlistener(\"input\", function UploadDocsComponent_Template_input_input_26_listener($event) {\n          return ctx.onSelectFile($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 14)(28, \"button\", 15);\n        i0.ɵɵtext(29, \"Upload\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(30, UploadDocsComponent_div_30_Template, 7, 5, \"div\", 16);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.heading);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngIf\", ctx.progressValue);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["HttpEventType","map","i0","UploadDocsComponent","constructor","http","onUploadDoc","data","fd","FormData","append","case_id","file","value","display_name","doc_type","uploadDocs","pipe","events","type","UploadProgress","progressValue","Math","round","loaded","total","Response","setTimeout","subscribe","next","console","log","error","err","onSelectFile","event","target","files","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/sagarsigdel/Desktop/ecourts/ecourt-frontend/src/app/dashboard/case-entry/upload-docs/upload-docs.component.ts","/Users/sagarsigdel/Desktop/ecourts/ecourt-frontend/src/app/dashboard/case-entry/upload-docs/upload-docs.component.html"],"sourcesContent":["import { HttpEventType } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { map } from 'rxjs';\nimport { HttpService } from 'src/app/services/http/http.service';\n@Component({\n  selector: 'app-upload-docs',\n  templateUrl: './upload-docs.component.html',\n  styleUrls: ['./upload-docs.component.css']\n})\nexport class UploadDocsComponent {\n  heading = 'Upload Documents';\n  file:any;\n  progressValue: number = 0;\n  @Input('case_id') case_id: string = '';\n  constructor(private http: HttpService){}\n  onUploadDoc(data: any){\n    let fd = new FormData();\n    fd.append('case_id', this.case_id);\n    fd.append('document', this.file);\n    fd.append('display_name', data.value.display_name);\n    fd.append('document_type', data.value.doc_type);\n    this.http.uploadDocs(fd).pipe(map(events => {\n      switch(events.type){\n        case HttpEventType.UploadProgress:\n          this.progressValue = Math.round(events.loaded/events.total! * 100);\n          break;\n        case HttpEventType.Response:\n          setTimeout(() => {\n            this.progressValue = 0;\n          },250)\n      }\n    })).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: err => {\n        console.log(err);\n      }\n    })\n  }\n  onSelectFile(event:any){\n    if(event.target.files && event.target.files[0]){\n      this.file = event.target.files[0];\n    }\n    console.log(this.file);\n  }\n}\n","<div class=\"px-5 mt-4\">\n    <div class=\"title\">\n        <h3>{{ heading }}</h3>\n    </div>\n    <hr>\n    <div class=\"form mt-4\">\n        <form #upload=\"ngForm\" (ngSubmit)=\"onUploadDoc(upload)\">\n            <div class=\"row\">\n                <div class=\"col-md-3\">\n                    <label class=\"form-label\">Document Type</label>\n                    <select class=\"form-select\" name=\"doc_type\" ngModel #doc_type=\"ngModel\" required>\n                        <option>Affidavit</option>\n                        <option>IA</option>\n                    </select>\n                </div>\n                <div class=\"col-md-4\">\n                    <label class=\"form-label\">Display Name</label>\n                    <input type=\"text\" class=\"form-control\" name=\"display_name\" ngModel #display_name=\"ngModel\" required>\n                </div>\n                <div class=\"col-md-3\">\n                    <label class=\"form-label\">Upload File</label>\n                    <input type=\"file\" class=\"form-control\" (input)=\"onSelectFile($event)\">\n                </div>\n                <div class=\"col-md-2\">\n                    <button class=\"btn btn-primary\" style=\"margin-top: 31px;\">Upload</button>\n                </div>\n            </div>\n        </form>\n        <div *ngIf=\"progressValue\">\n            <div class=\"progress mt-4\">\n                <div class=\"progress-bar\" [style.width.%]=\"progressValue\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{progressValue}}%</div>\n            </div>\n            <div class=\"mt-2\">\n                <span *ngIf=\"progressValue !== 100\">Please wait while the file is being uploaded</span>\n                <span *ngIf=\"progressValue === 100\">File Uploaded</span>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}